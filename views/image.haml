#main
  #left
    #glasses
      %ul
        - Glass.randum(4).each do |glass|
          %li
            %a{href: "#", class: "display", id: "glass_#{glass.id}", src: glass.src}
              %img{src: glass.image_url, width: 120}
              %img{src: glass.src, class: "hidden"}
  #center
    #video_pane
      %video#video{autoplay: true}
      #frame
      %button#captureButton capture
    #capture_pane
    #photo
      - if @photo
        %img{src: @photo.src}
      - if @glass
        #glass
          %img{src: @glass.src}
    %button{id: "share-button"} Share
    %button#restartButton restart
  #right
    #captures
  %canvas#capture{width: 350, height: 350, style: 'display: none;'}

:coffeescript
  photo = {
    face: { left: #{@face.left}, width: #{@face.width} },
    eye:  { center_x: #{@eyes.center_x}, center_y: #{@eyes.center_y} }
  }
  glass = { width: 212, height: 58 }

  console.log("face[left: " + photo.face.left + ", width: " + photo.face.width + "]")
  console.log("eye[center_x: " + photo.eye.center_x + ", center_y: " + photo.eye.center_y + "]")

  $photo = $("#photo")
  photo.top   = $photo.position()["top"]
  photo.left  = $photo.position()["left"]
  photo.width = $photo.width()
  photo.height= $photo.height()

  console.log("photo[top: " + photo.top + ", left: " + photo.left + ", width: " + photo.width + ", height: " + photo.height + "]")

  $glass = $("#glass")
  glass.width = photo.face.width
  glass.scale = glass.width / $glass.width()
  glass.height= $glass.height() * glass.scale
  glass.top   = photo.top  + photo.eye.center_y - glass.height * 0.4 # つるが上にはみ出ているせいで、画像高さがやや高く計算されてしまう問題の対策
  glass.left  = photo.left + photo.face.left

  console.log("glass[top: " + glass.top + ", left: " + glass.left + ", width: " + glass.width + ", height: " + glass.height + ", scale: " + glass.scale + "]")

  $glass.css(glass)
  $glass.children("img").css(glass)
  $glass.draggable()

  $("#glasses a").click ->
    src = $(this).attr("src")
    console.log("glass change: " + src)
    $("#glass img").attr("src", src)
    $("#glass img").height($(".hidden", this).height() * glass.scale)

:javascript
  $(document).ready(function(){
    var $video = $("#video");
    var canvas = $("#capture").get(0);
    var context = canvas.getContext("2d");
    var $img = $("#photo img:first");
    var $captureButton = $("#captureButton");
    var $restartButton = $("#restartButton");
    var $postButton    = $("#postButton");

    //ブラウザ間で仕様が違うらしいオブジェクト
    var windowURL = window.URL || window.webkitURL;
    //別名を作れないので上書きしておく
    navigator.getUserMedia = navigator.getUserMedia ||
                             navigator.webkitGetUserMedia ||
                             navigator.mozGetUserMedia ||
                             navigator.msGetUserMedia;

    //取れなかったら動作しない
    if (windowURL == null || navigator.getUserMedia == null) {
      alert("Google Chrome か Firefox をお使いください");
      return;
    }

    $captureButton.click(function() {
      capture();
      $("#video_pane").hide();
      $("#capture_pane").show();
    });

    var postCapture = function() {
      $.post("/capture/upload",{
        image: $img.attr("src").replace(/^data:image\/(png|jpg);base64,/, "")
      });
    };

    $restartButton.click(function() {
      $("#video_pane").show();
      $("#capture_pane").hide();
    });

    var capture = function() {
      video_width  = $video[0].videoWidth;
      video_height = $video[0].videoHeight;
      panel_width  = $video.width();
      frame_width  = $video.height();
      scale = video_width / panel_width;

      console.debug("video size:   " + video_width + ", " + video_height); // MBA is 640 x 480
      console.debug("panel size:   " + panel_width + ", " + frame_width + " (" + scale +")");

      capture_left = (panel_width - frame_width) / 2 * scale;
      console.debug("capture left: " + capture_left);

      context.drawImage(video, capture_left, 0, 480, 480, 0, 0, 350, 350);
      $img.attr("src", canvas.toDataURL("image/png"));
    };

    //成功したときのコールバック
    var success = function(stream) {
      $video.attr("src", windowURL.createObjectURL(stream));
      //キャプチャも開始する
      capture();
      postCapture();
    };
    //失敗したときのコールバック
    var error = function(e) {
      alert("失敗");
    };
    //音も取れるらしいけど今回は動画のみ
    //getUserMediaの第一引数の型が途中で仕様変更されたらしい
    navigator.getUserMedia({video: true}, success, error);
  });
